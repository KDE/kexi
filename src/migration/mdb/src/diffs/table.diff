--- ./libmdb.cvs/table.c	2005-12-17 16:59:18.000000000 +0100
+++ ./libmdb/table.c	2007-11-09 22:05:36.625000000 +0100
@@ -13,8 +13,8 @@
  *
  * You should have received a copy of the GNU Library General Public
  * License along with this library; if not, write to the
- * Free Software Foundation, Inc., 59 Temple Place - Suite 330,
- * Boston, MA 02111-1307, USA.
+ * Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
+ * Boston, MA 02110-1301, USA.
  */
 
 #include "mdbtools.h"
@@ -95,7 +95,7 @@
 	/* grab a copy of the usage map */
 	pg_row = mdb_get_int32(pg_buf, fmt->tab_usage_map_offset);
 	mdb_find_pg_row(mdb, pg_row, &buf, &row_start, &(table->map_sz));
-	table->usage_map = g_memdup(buf + row_start, table->map_sz);
+	table->usage_map = g_memdup((char*)buf + row_start, table->map_sz);
 	if (mdb_get_option(MDB_DEBUG_USAGE)) 
 		buffer_dump(buf, row_start, table->map_sz);
 	mdb_debug(MDB_DEBUG_USAGE,"usage map found on page %ld row %d start %d len %d",
@@ -104,7 +104,7 @@
 	/* grab a copy of the free space page map */
 	pg_row = mdb_get_int32(pg_buf, fmt->tab_free_map_offset);
 	mdb_find_pg_row(mdb, pg_row, &buf, &row_start, &(table->freemap_sz));
-	table->free_usage_map = g_memdup(buf + row_start, table->freemap_sz);
+	table->free_usage_map = g_memdup((char*)buf + row_start, table->freemap_sz);
 	mdb_debug(MDB_DEBUG_USAGE,"free map found on page %ld row %d start %d len %d\n",
 		pg_row >> 8, pg_row & 0xff, row_start, table->freemap_sz);
 
@@ -231,17 +231,17 @@
 
 		pcol->col_type = col[0];
 
-		// col_num_offset == 1 or 5
+		
 		pcol->col_num = col[fmt->col_num_offset];
 
-		//fprintf(stdout,"----- column %d -----\n",pcol->col_num);
-		// col_var == 3 or 7
+		
+		
 		pcol->var_col_num = mdb_get_int16(col, fmt->tab_col_offset_var);
-		//fprintf(stdout,"var column pos %d\n",pcol->var_col_num);
+		
 
-		// col_var == 5 or 9
+		
 		pcol->row_col_num = mdb_get_int16(col, fmt->tab_row_col_num_offset);
-		//fprintf(stdout,"row column num %d\n",pcol->row_col_num);
+		
 
 		/* FIXME: can this be right in Jet3 and Jet4? */
 		if (pcol->col_type == MDB_NUMERIC) {
@@ -249,16 +249,16 @@
 			pcol->col_scale = col[12];
 		}
 
-		// col_fixed_offset == 13 or 15
+		
 		pcol->is_fixed = col[fmt->col_fixed_offset] & 0x01 ? 1 : 0;
 
-		// col_fixed_offset == 13 or 15
+		
 		pcol->fixed_offset = mdb_get_int16(col, fmt->tab_col_offset_fixed);
-		//fprintf(stdout,"fixed column offset %d\n",pcol->fixed_offset);
-		//fprintf(stdout,"col type %s\n",pcol->is_fixed ? "fixed" : "variable");
+		
+		
 
 		if (pcol->col_type != MDB_BOOL) {
-			// col_size_offset == 16 or 23
+			
 			pcol->col_size = mdb_get_int16(col, fmt->col_size_offset);
 		} else {
 			pcol->col_size=0;
@@ -298,6 +298,7 @@
 	return table->columns;
 }
 
+#if !MDB_NO_BACKENDS
 void mdb_table_dump(MdbCatalogEntry *entry)
 {
 MdbTableDef *table;
@@ -357,6 +358,7 @@
 		printf("\n");
 	}
 }
+#endif
 
 int mdb_is_user_table(MdbCatalogEntry *entry)
 {
