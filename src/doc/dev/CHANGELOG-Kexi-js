-----------------------------------------------------------------------------
 Kexi Development CHANGELOG Document
 From js's Point of View
 
 Copyright (C) 2003-2006 Jaroslaw Staniek js at iidea.pl / OpenOffice Polska
 Kexi home page: http://www.kexi-project.org/
-----------------------------------------------------------------------------

For most important commits use: CCMAIL:kexi-devel@kde.org
Use CCMAIL:###-done@bugs.kde.org

TODO:
- inform Raphael about koffice.org/1.5/ url, give him the php code

2006-04-10
KexiDB
- QuerySchema(TableSchema* tableSchema) ctor:
  To avoid problems (e.g. with fields added outside of Kexi using ALTER TABLE) 
  we do not use "all-tables query asterisk" (see QueryAsterisk) item 
  but instead we add all the fields explicity. 
0.9/1.0/2.0: ported
- PostgreSQL driver: fixed crash when a new field has been added to existing 
  table outside of Kexi
0.9/1.0/2.0: ported
Table Designer
- More intrusive warning when altering table design
1.0: ported (except the message)
2.0: ported

2006-04-08
KexiDB
- use SQL-compliant TRUE and FALSE constants for PostgreSQL 
  (1 and 0 are unsupported)
0.9/1.0/2.0: ported

2006-04-07
Table View & Form View
- "invalid data warning" tool tip improved and reused in Kexi forms
- many fixes related to handling date, time and date/time values

2006-04-05
Form Designer
- KexiDBDoubleSpinBox and KexiDBIntSpinBox replaced line edit with validator because
  of problems with handling null data and signalling changes. 
  (there's no backward compatibility problems as these two widgets were used internally 
  in the AutoField data widget)
- fixed saving data changes made within auto field widgets
- fixed support for tab/backtab key within auto field widgets
- fixed problem when sometimes form was not filled with data after change of the design
1.0/2.0: ported

2006-04-04
CSV Import
- possible crash fixed after switching character encoding
1.0/2.0: ported
Main Window
- "Compact Database": now closing the current project is required; 
  if there's no project is opened, user is asked for picking one
Property Editor
- possible crash fixed when bool editor's state is quickly switched
1.0/2.0: ported

2006-03-29
Main Window
- "Compact Database" admin action added
KexiDB
- API version increased to 1.8
- "Compact Database" implemented for SQLite3 databases

2006-03-28
Startup
- --readonly command line option added
TableView
- boolean editor: only accept clicking on the [x] rect
1.0/2.0: ported

TODO: merge trunk with revision 523723

~~~~~~~~~~~~~~~~ 1.0 stable (with KOffice 1.5)  ~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~ 1.0 rc1 (with KOffice 1.5 rc1) ~~~~~~~~~~~~~~~~

2006-03-20
KexiDB
- use local sockets by default for local server connections, if possible

2006-03-16
KexiDB
- added simple encryption for stored passwords
- allow to save empty password in .kexis and .kexic files
Startup
- ask for password (without storing it) for connection data without stored password

~~~~~~~~~~~~~~~~ 1.0 beta 2 (with KOffice 1.5) ~~~~~~~~~~~~~~~~

2006-02-28, 03-03
PostgreSQL driver
- fix for displaying unicode error messages
- fixed escaping binary data (octal values are used for special characters)
- fixed loading and saving BLOB data (images within forms work now)

~~~~~~~~~~~~~~~~ 2006 (OOPL) ~~~~~~~~~~~~~~~~

2006-02-22
CSV Import Dialog
- fixed updating "primary key" checkbox

2006-02-21
Table View
- row highlighting fixed for combo box popup, now it's used for any table view

2006-02-20
Project Import Wizard
- do not ask about overwriting file if server-based destination has been selected

2006-02-17
Query Designer
- fixed crash on saving new query design
Main Window
- disabled complex and redundant action 'View -> Tool Docks' menu.
  This comes from KMDI, not Kexi itself and will be completely removed 
  in KDE4 version. IIRC, we could not hide it now as this may cause crashes.

Form Designer
- text label widgets: "word wrap" is turned on by default
- fixed update "word wrap" property for label widgets
- fixed random cursor setting for the form surface
- fixed problems with inserting widgets in a random position 
  and random rectangles painting problems 
  (all this due to MouseButtonRelease event coming BEFORE MouseButtonPress event)

2006-02-16
Query Designer
- Row editing within the "Columns" area is accepted before saving.
  If the editing cannot be accepted, saving is aborted. 
Table Designer
- set property editor to read-only mode for read-only database connections
Data Table
- disable combobox editor's dropdown button for read-only database connections
Property Editor
- fix for read-only mode: support it also globally at property set level
- disable editing for read-only widgets
- fix for displaying double values for current locale

2006-02-15
General
- when query design has been changed and saved, subsequent openings of a form using 
  it will reload its definition. The same for 'page setup' dialogs, etc.
- fixed crash when 'page setup' dialog is opened, closed, and opened again for 
  the same data object

2006-02-10, 14
Main Window
- closing dialog is now marked as 'pending job', the same as for opening
- When there are pending jobs, 'quit' and 'close project' actions are
  delayed and executed after last pending job finishes. This removed possible 
  crashes when user closed application's main window (or closed project) 
  when there are pending jobs.

2006-02-03,07
Forms
- fixed painting "geometry" rectangle when inserting new widget
- update tab stops information before displaying "Tab Stops" dialog
- fixed invalid resizing for widget's inline editor
- 'edit->tab order' action is available also when form design is not focused

2006-02-01
KexiDB
- MySQL: added temporary (unoptimized) implementation of Prepared Statement
- MySQL, SQLite: fixed inserting BLOB data (without Prepared Statements)
- MySQL: fixed fetching BLOB data (without Prepared Statements)
- MySQL, PostgreSQL: fixed entering strings containing characters like ' \ "
- most debug lines commented out
CSV Import Dialog
- fixed importing for MySQL backend
Form Designer
- fixed saving images (binary data) to MySQL backend

2006-01-31
CSV Export Wizard
- When data is copied to clipboard, default delimiter is tabulator
  and options are hidden.

2006-01-30
Form Designer
- fixed saving new forms for MySQL databases
CSV Import Dialog
- fixed crash when importing CSV files smaller than 200 bytes

2006-01-25,26
KexiDB
- SQLite3 driver & kexisql3: fixes for read-only opening
Main Window
- fixed usability: read-only flag of the db connection is now visible
  in the statusbar
- added question about opening db file as read-only when it is already opened
- disable actions that require write access to the db if it's opened as readonly
Startup
- fixed support for "-print-preview" command line option
Simple Printing
- enlarge default zoom
Property Editor
- fixed editor refreshing after contents loading
Table View
- 'inserting enabled' flag is always false for read-only objects

2006-01-24
KexiDB
- Unicode support fixed for MySQL

2006-01-23
Table View
- fixed acceping am/pm for entering time values
- various fixes for entering date, time and date/time values
- time can be entered without seconds
- small passive warning box is displayed when entered value is invalid
  (currently for date, time and date/time types)

~~~~~~~~~~~~~~~~ 1.0 beta 1 (with KOffice 1.5) ~~~~~~~~~~~~~~~~

Main Window
- 'single click opens' is mode is off by default, can be turned on
Table Designer
- Object type hidden for beta1
Table View
- date, time and date/time values are displayed using KDE settings

2006-01-20
General
- examples/ directory in the source code tree now contains 
  example database(s)
Form Designer
- Data source pane: disable widget's data source combo box 
  when there is no form's data source defined
- temporary disable AutoField
- temporary disable cursor property
Query Designer
- fixed displaying criteria if WHERE section contains '('
- tables positions are preserved if possible when 
  relations view updating is needed

2006-01-18, 19
Form Designer
- widget library naming made more verbose to avoid potential 
  conflicts between packages
- versioning added for widget library plugins; this can also 
  avoid conflicts between plugins as we've just renamed them
Query Designer
- fixed displaying criteria for table view rows when 'visible' 
  column is set to false
- all-tables-asterisk is also hidden when last table is hidden
- temporary data member isolated; fixed possible crash when 
  switching back from SQL View to Design View

2006-01-17
KexiDB
- even more verbose error messages for failed SQL statement execution
CSV Import Dialog
- tabulator is default field delimiter for clipboard data
- delimiter detection improved
General
- "Dangerous" flag set for potentially destructive dialogs
- a few redundant i18n strings removed
Table View
- data for large table view is destroyed without blocking GUI

2006-01-16
Project Import Wizard
- hide Kexi file extensions in source connection file dialog's filter
Main Window
- fixed saving Project Navigator Side Panel's visibility
- do not allow to open the same dialog twice - it was possible 
  for slowly loading dialogs with large data (e.g. a table view with 10^4 rows);
  pending 'open' actions are now known
Simple Printing
- do not paint invalid values of type time, date or date/time
Table Designer
- fixed selecting subtypes
KexiDB
- SQLite driver: missing {} in PreparedStatement
- testing connection executes "USE DATABASE" if needed (e.g. for PostgreSQL)

2006-01-12
Table View
- Usability: Date, Date/Time and Time cell editors reimplemented

2006-01-11
Migration
- fixed opening project after import if user wanted this

2006-01-09
Form Designer
- infinite loop removed when updating multiple selection
0.9: backported
0.8: backported
- "Assign Action" dialog cleaned
KexiDB
- generate cleaner query statements:
  if there's single table in query schema, skip "table." prefix in resulting 
  SQL string, e.g. build "SELECT a, b FROM t" instead of "SELECT t.a, t.b from t".
Query Designer
- "Totals" column hidden as it is not implemented

2006-01-05..6, 10
CSV Import Dialog
- optimalization for large data: only about 100 rows are loaded for preview
- progress dialog added on dialog creation (opening can be cancelled)
- layout fixes
- missing column with primary key is added if user wants it
- optimized importing large (many thousands of rows) tables: 
  GUI is not used to store entire table before importing;
  only current record is kept in memory buffer
- progress dialog added on importing (importing can be cancelled)

2006-01-02..04
Startup
- "--skip-dialog" command line option added. 
  Skips displaying connection dialog\n"
  and connects directly. Available when opening .kexic 
  or .kexis shortcut files.
- opening server-based projects works in File->Open when 
  there's already project opened.
- "--connection <shortcut_filename>" command line option added. 
  Specifies a database connection shortcut .kexic file containing 
  connection data. Can be used with --createdb or --create-opendb
  for convenience instead of using options like --user, --host 
  or --port. Note: Options like --user, --host have precedence 
  over settings defined in the shortcut file.
- creating server-based projects works in File->New when 
  there's already project opened.
Migration
- Project Migration Wizard is proposed if a server-based database
  is incompatible with Kexi and cannot be opened
- if a destination for imported project is a server, it is also 
  opened after import, if user wanted this

2005-12-23, 29
General
- (data forms, table view): fixed entering row number in the row navigator
- win32: fixed saving recently displayed directories in file dialogs
KexiDB
- SQLite: opened files are now locked for read/write by default;
  related error messages improved
Simple Printouts
- pages to print can be selected
- number of copies can be entered
- pages collation switch on or off (i.e. 1-2..n; 1-2..n.... for collation
   and 1-1-...1; 2-2..2; .. for "no collation")
- page count is properly computed and printed on the footer as "Page x of y"
- "Page Setup" action added; 
   now it's window is only presented when user really wants this
- text of the page title properly updated

2005-12-12..22
Simple Printouts
- added Simple Printouts window with print preview and settings
Table View
- failed accepting of row editing now cancels window closing
- fixes for updating row data (this was sometimes visible in Table Designer)
Table Designer
- avoid asking twice for saving changes to the design on window closing
- find unique name for autogenerated primary key fields
Kexi Core 
- possibility of adding non-db-aware windows/tabs in Kexi
General
- added --print and --print-preview command line options
- (temporary) mini-kolibs added to get print settings stuff and remain 
  independent on kolibs

2005-12-09
Forms
- memory for data is now properly freed before closing a form
0.9: backported
0.8: backported
CSV Export
- CRLF characters are used as in RFC 4180
- fixed gcc compiler-specific crash
- quote characters are escaped inside strings
- date/time values are exported without "T" inside (from ISO format)
CSV Import
- fixed handling line endings inside strings
- time and date/time types import and detection added

2005-12-05..08
Property Editor
- repaint fixes when column width changes or when persistent selection is set
- Property::captionForDisplaying() added: beter support for multiline property captions
- method names improved in Factory
- do not steal focus when selection is preserved
- possible crashes fixed when property values are changed in an instant reaction 
  on changing a property value in the editor; this is the case e.g. in Kexi Table Designer
- API docs updated
General
- custom "Identifier" property type and editor added (allows only entering identifiers); 
  used in Table/Form/Report Designers
Table Designer
- Field captions can be now entered by users instead of names. 
  Field names are then automatically generated.
- fixed problem with undo button for subtype combo box
- support for BLOB (Object) type; "Image" is now the only subtype of this type
- "unique" and "indexed" properties hidden for BLOB type
Table View
- clearing text removes value in combo box field for "enum" mode

2005-12-02
Main Window
- usability: for IDEAl mode tabs are also visible when one window is opened
  (otherwise user could not know what the window's caption is)
- usability: added "close" button to the tab widget for IDEAl mode
- 'hover close button' is now turned off by default for IDEAl mode
  (added HoverCloseButtonForTabs setting to kexirc for changing this)

2005-11-29..12-01
General
- file dialog's filters now contain only filters that make sense, 
  e.g. there's no "mdb" filter when we're writing to a file.
- usability: file dialogs now store recent directory paths 
  in the config file, and this is now used everywhere in Kexi
- default extension is properly added when there's multiple filters set
  in the file dialog
Startup Dialog
- check for existence of a file user has selected to open
CSV Files Export
- CSV Export dialog added (also for copying to clipboard)
  with storable export options
CSV Files Import
- usability: integer spin box used for "Start at line" option instead 
  of a combo box

2005-11-28
Main Window
- "File->Export->Data Table" and "Edit->Copy Special->As Data Table" 
  actions added
Parts
- X-Kexi-PartVersion increased to 2
- added boolean servicetype property: X-Kexi-SupportsDataExport; 
  true for tables and queries
CSV Import
- space saved: radio buttons replaced by combo boxes
- added "Always use this encoding when importing CSV data files" option 
  to "CSV Import Options" dialog (saved to Kexi config file).

2005-11-26
Project Migration
- added "Always use this encoding in similar situations" option 
  to "Advanced options" dialog (saved to Kexi config file).

2005-11-25
Project Migration
(API CHANGED)
- Added versioning for migration drivers (current one is 1.1)
- Added properties support for migration drivers
- All error messages are displayed on the last "Failure" page
- Added "Advanced options" button and dialog, currently with "Encoding" parameter 
  for source database. Currently used by MDB driver for MSJet3 files.
General
- KexiCharacterEncodingComboBox added - a combobox widget providing 
  a list of possible character encodings

2005-11-22..23
Project Migration
- "All Supported Files" filter added to Kexi file dialogs
- Files like MS Access .mdb can be now clicked and then Import Wizard will pop up 
  with preselected parameters. This also works using command line.
- Import Wizard's GUI: improved messages, added real Finish page
- No need to select source driver, it's enought to select a filename or db connection
Startup
- Better usablity of 'Open Existing' tab page
- Better usablity of 'New project wizard'

General
- compile fix for some compilers
0.9: backported
0.8: backported

2005-11-15
Forms
- AutoField widget: update m_label for font/palette change
- AutoField widget: display "Unbounded Auto Field" text when 
  no data source is set (in design time, like for image box)

2005-11-09..14
Forms
- AutoField widget: improved behaviour in design time 
  (setting caption/type/label position)
- frameColor property added for widgets like text label or frame: 
  behaves well also for "raised" frame shapes
- new widget KexiFrame, will provide more features; backward compatible 
  with QFrame
- do not allow to move top-level widget's position using arrow keys
Property Editor
- fix entering text into string-type editors with 'autoSync' flag

2005-11-07
Startup
- When opening connection (most often using .kexic file), connection dialog is shown
  so user can adjust connetion parameters, (optionally save them) and finally perform
  the connection to see available databases. If connection failed, connection dialog 
  is popping up again.

2005-11-02..04
2005-10-31
Project Migration
- call KexiProject is used to create destination database instead of KexiDB::Connection
  because tables like kexi__parts and kexi__blobs have to be created.
- Moving kexi projects from database servers to database files works.
  kexi__objects table contents are properly copied if existed in source database,
  so queries, forms etc. are properly imported
- Wizard's GUI improvements
KexiDB
- More verbose error messages: 
  Error messages and result numbers can be now inherited by using
  Object::setError( KexiDB::Object *obj, const QString& prependMessage ),
  so less information will be lost while displaying message e.g. 
  on failed cursor opening.
- mysql/pgsql/sqlite/mdb drivers updated for the current API

- Tables: fixed retrieving field captions and descriptions
  0.9: backported
  0.8: backported

2005-10-27
KexiDB
- kexi__parts internal table is now created within KexiProject, 
   not KexiDB::Connection
- kexi__useractions and kexi__final are no longer created
Project Migration
- speedup: table creation and data copying is performed within transactions
- Added possibility of migrating Kexi projects from one backend to another
  (e.g. from MySql server to SQLite file) internal kexi__ tables are properly recreated; 
  data, e.g. for kexi__parts and kexi__blobs is properly copied

2005-10-24..26
Forms
- Property editor widget for pixmaps now uses KexiBLOBBuffer
- forms manager turned into singleton, 
  and two widget libraries are now created: one for forms and one for reports
Property Editor
- show preview box in visible area
KexiDB
- DatabaseProperties utility class added to API
Table View
- Fixed ugly bug for switching sorting order (thanks Aaron)
  0.9: backported
  0.8: backported
- Better sorting: 
-- NULL values are smaller than everything else
-- Special sorting for data/time/datetime/bin integers/floating point numbers
  0.9: backported
  0.8: backported

2005-10-19
Forms
- image box doesn't provide popup in data view mode when 
  no data source is assigned
- Kexi Form widgets code splitted

2005-10-18
KexiDB
- Connection::querySingleRecord() improved
- QuerySchema::addToWhereExpression() added
- SQLite driver: fixed BLOBs retrieval

2005-10-15
Table View
- crash fixed in combo box
  CCBUG: 114697
  0.9: backported
  0.8: backported
- alt+down shortcut can be used to drop down combo box (previously only F4 worked)
  0.9: backported
  0.8: backported
- combo box editor's popup: 
  row repainting fixed after current highlighted row has changed
  0.9: backported
  0.8: backported
Table Designer
- avoid possible infinite recursion
- selecting non-integer type group using 'type combo' clears PKEY flagm, if set

2005-10-14
Forms
- It was not possible to change the tab order of
widgets in the Edit Tab Order dialog with keyboard.

2005-10-12
Project Import Wizard
- usability++: after successful import, the project is opened

Query Designer
- conditions: ambiguous expressions fixed: 
  "t1.id > 100" is used instead of "id > 100" in queries like
  SELECT * FROM t1, t2 WHERE t1.id = t2.id AND t1.id > 100
- fixed possible crash when invalid query design is loaded in design view
- fixed switching to design mode after invalid query was opened directly in text mode 
- eat parentheses on criteria loading, in WHERE conditions like (a.id = value)
- also accept tableName.fieldName on criteria loading, not only tableName
- also accept e.g. "2 = variable" as condition, not only "variable = 2"
- graphical representation of joins is generated back from SQL statement not only 
  based on explicit query schema's relations but are also retrieved 
  from "[t1.]f1 = [t2.]f2" expressions within WHERE section

TODO: joins are not visible when switching from design to text mode (and conversely) 
  when there are no columns selected in FROM section, eg. "select from a, b"

2005-10-06
KexiCore
- Fixed autogenerating object names (e.g. tables, queries) based on caption: 
  latin1 base name can be now chosen by translator
BUG: 104858

2005-10-05
KexiDB
- PreparedStatement introduced
- mysql, sqlite drivers: avoid double freeing data member in ConnectionInternal implementations

2005-09-27..29
Forms
- Images are stored in memory in original form, converting to QPixmap is only performed
  for displayoing purposes. Such original pixmap can be saved back to file. 
  Original file name is also kept. KexiImageBox handles pixmap data with QByteArray member
- KexiBLOBBuffer introduced: Application-wide buffer for local (static) BLOB data like pixmaps.
  For now only pixmaps are supported. Used on design time before objects are stored.
  This allows to copy multimegabyte pixmaps within Kexi without unnecessary memory loss.
- KexiCustomPropertyFactory introduced: handles Kexi-specific property editor items

2005-09-26
KoProperty lib
- Editor: possible crash fixed
- Property: guarded ptrs are used to store pointers to Set objects
 to avoid dangling pointers

2005-09-24
General
- KEXI_STANDALONE compile time definition added
- description in 'about data' mentions whether it is a standalone or 'bundled' 
  Kexi version
- .po files are now prefixed with "standalone_" for standalone versions
  to avoid conflicts with KOffice installations
- yes, 1.0 is marked as standalone version
- custom defines cleaned up

2005-09-21..22
MDB Driver
- all strings are now properly decoded (object names and data):
  MDB(UCS2)->MDBTOOLS(UTF8, using libiconv)->KEXI_MDB(QString)
- non latin1 filenames handling fixed
- fixed date, date/time types handling (including Y2k problem for years >=1930)
- fixed currency handling (double type is assumed for now)
Table View; Data Interface
- fixed possible crashes for comboboxes within non-db-aware table views
Table Designer
- fixed 'subtype' combo refreshing within property editor
KexiDB
- DriverManager: to avoid conflicts with other copies of KexiDB, 
  eg. in ShowImg application, "kexidb_" prefix is required for KexiDB 
  driver files (KDE modules)
- some docs and above information added for Doxygen

2005-09-17..20
KexiProject
- createInternalStructures() added; semi-internal (not well suited for kexidb itself) 
  structures like kexi__blobs table are created now if not yet exist
- internal kexi__blobs table introduced: for BLOB storage
General
- some i18n strings fixed
- KEXI_NO_AUTOFIELD_WIDGET, KEXI_NO_IMAGEBOX_WIDGET temp. compile time options added

2005-09-16
Forms
- FormIO: some fixes in method's naming
KexiDB
- tristate type is used in some more methods, so it's now possible 
  to catch "no data" cases, not only "server errors"
- InternalTableSchema class added (to avoid polluting TableSchema/Conenction APIs)

2005-09-15
Kexi supports static and data-aware images boxes
- properties implemented: scaling (aspect ration can be kept), 
  horizontal/vertical alignment
Project Migration
- cleaned up the code a bit
- 'back' button works well on "dest. type" page when file-based driver is used
- user is warned when no source filename was specified
Forms
- view mode (design/preview) is now also passed as option 
  to WidgetFactory::createWidget() so widget's look&feel can differ depending 
  on the view mode

2005-09-14
Property Editor
- PixmapEditor improved displaying, and value changes support
- Editor's widgets have proper geometry set a bit earlier

2005-09-06 (aKademy)
2005-09-08..13
Forms
- data-aware image box widget 
(partial implementation started during flight back from Girona to Warsaw)
-- "insertFromFile", "saveAs", "cut", "copy", "paste", "delete", "properties" 
   popup actions added
- "readOnly" property added for image, spinboxes and dbfield widgets

2005-09-03 (aKademy)
Relations view
- fixed redrawing (in an unoptimized way)
Property Editor
- updating combobox items after change of list data
TableView
- combo box popup behaves more like a normal combo (highlighting, selecting)
- added "what's this" support for table columns

2005-08-27
Forms
- a fix for 'value changed' flag and datachangeslistener in autofields

2005-08-19
Startup
- "-type connection" command line arg added 
  (i.e. support for applications/x-kexi-connectiondata mime type)
Main Window
- project navigator visibility flag is now stored in config file (usable  for IDEAl)

2005-08-16..18
Main Window
- Toplevel (buggy) and Tabbed (redundant) KMDI modes hidden in Window menu;
  Changing MDI mode now requires application restart (the lesser of two evils)
- 'Create' menu renamed to more typical 'Insert'; 'Data' menuu moved after 'Format'
- project navigator: usability fixes
Widgets
- KexiSmallToolButton helper class added
- fixes for KexiFlowLayout
Forms
- "other widgets" toolbar popup added for clarity

2005-08-12
Form Designer
- possible crashes fixed

2005-08-10, 11
Form Designer
- added possibility of inserting autofields using 'Insert fields' button 
  from Data Source tab
- CommandGroup usability improved: it's now possible to addCommand() 
  with flag telling that it will not be executed on CommandGroup::execute()
- above CommandGroup's feature is used to make a single command 
  out of 'inserting multiple autoFields' task
- top-level form surface is resized when inserted autoField(s) couldn't fit
- inserting autofields is atomic command supporting undo/redo
General
- applications/x-kexi-connectiondata MIME type defined

2005-08-09
Form Designer
- data source tab: usability improved for field list
Widgets
- KexiFieldListView is now displaying unique fields list for queries
KexiDB
- 'bool unique' arg supported for QuerySchema::fieldsExpanded()
  and TableOrQuerySchema::columns()
Query Designer
- fixes for recent API change of KexiFieldListView

2005-08-08
Main
- better readibility: new project type selector uses listview, not icon view

2005-08-05
Property Editor
- '-flat' arg added for test app
- painting improved for both flat and groupped mode

2005-07-29..2005-08-02
Form Designer
- field editor's types list reuses KexiDB::fieldName() for i18n
- autocaption is set properly for field editor on design time
- field editor's labelCaption is no longer needed
- propeditor: preserve "changed" flags (marked with BOLD) between property set switching
- KAcceleratorManager::setNoAccel(QWidget*) is used for widgets in design mode 
  to avoid adding accelerators (for FormIO and for new widgets inserting)
- factories: isPropertyVisibleInternal() is now called for superclass when needed
  (thus, properties like "iconText" are properly hidden)
- when a widget is deleted or cut, its parent container become selected
KoProperty library
- fix for spin box editor's width
- better display for composed editors for types like Rect
- fixed undo button's size in Editor
- font editor fixed
- Editor: expand/collapse boxes painted using styles; whitespace added on the left hand
- Editor: editor widget's focusing fixed
Table Designer
- a fix for 'subType' combo
Main Window
- Navigator: when items renaming, treat "*" ("changed" flag) as a special character, 
  not a part of the item's name

2005-07-28
Form Designer
- field editor's default focus policy is now inherited from internal editor

2005-07-25..27
Form Designer
- better support for Auto Fields, including drag&drop
- DesignTimeDynamicChildWidgetHandler added - interface for adding 
  dynamically created (at design time) widget to event eater
- editor inside KexiDBFieldEdit is visible at design time
- KexiDataItemInterface::field() changed to columnInfo() 
  -> more information can be now reused for visual field (i.e. query alias)
- dbwidgets moved to libformutils as we're reusing many 
  of them outside of dbwidgets factory
- version information is loaded/saved within form's UI string

2005-07-23
Core
- management related to Part's ID improved; fixed related bug

2005-07-22
KexiDB
- support for PostgreSQL on win32
- PostgreSQL driver's transactions handling improved

2005-07-21
Form Designer
- checkbox inline editing enabled
- width of inserted widgets' size hint increased a bit to for better usability

2005-07-13..20
General
- @internal added for private classes to make api docs more readable
Startup / Server Support
- connection data editor improved
- connection data is now storable
- added support for adding/deleting/editing connection data
KexiDB
- BIC CHANGE (witin v1.7): bool ConnectionData::savePassword flag added
- KexiDB::connectionTestDialog() added for performing test connections

TODO:::::::
-fix shared actions availability for ideal mode! (reported by ccpasteur)
-fix "edit tab order" action: not working when prj browser is focused...

TODO: koproperty: us ListData-like struct instead of QMap, because data combo boxes should be sorted

2005-07-10
KexiDB
- BIC CHANGE TO v1.7: (portability fix) pkeyfieldsorder and fieldsorder mapping 
  now use int instead of uint

2005-07-08
KoProperty
- 'list data' introduced to clearly define 'keys' and 'strings' for combobox-like editors
- cursor editor fixed
- other minor fixes

2005-07-05..07
Form Designer
- Data source fields can be dragged from Data Source Pane 
  and dropped on the form's surface to create data-aware line edit widgets
- on new form empty creation, undo/redo history is cleared 
  and undo/redo actions are not available
- on design time, 'dataSource' properties for forms and dataaware widgets 
  are synced with data source  combo boxes 

2005-07-04
Property Editor
- properties now have 'sortingKey', so the order of properies is maintained
- fixed bug in Set::clear()
Form Designer's Property Editor
- better handling multiple widget selection
- fixes for widget info label

2005-07-02
Form Designer
- fixed i18n for property captions
- fixed filling enum values

2005-06-20..30
- * KexiProperty library made more generic as KoProperty *
- Kexi now uses KoProperty

Form Designer
- Data source tab in the Property Pane implemented
- 'dataSourceMimeType' property added for data-aware widgets, so it can be explicity 
  defined whether an object pointed by 'dataSource' property is a table of query. 
  This change is backward compatible.
- fixed switching property buffers when switching between child windows
- record navigator is now hidden if there's no data source assigned for a form
Query Designer
- object combo box now also contain queries (supporting queries is not implemented yet though)
  the list within the combo is property sorted and grouped; it's reused in 'Data source' tab 
  of Prop. Pane; the combo now reacts on deleting/creating/renaming of table or query
KexiDB
- TableOrQuerySchema helper class added
Main Window
- crash fixed in 'detach window' action
Core
- Field draging: API improved, now both query and table fields/columns can be dragged;
  added support for multiple fields dragging
- added 'higlight object' action for KexiProject (available from property pane)
- improved API for reaction on object creation/deletion/renaming
General
- small icons cleaned up; added better query/form/report/script icons
- 'X-Kexi-GroupIcon' property no longer used; such icons are too hard to design and recognize
- KexiFieldListView and KexiFieldComboBox added
- "kfd:customHeader" element added for inserting custom information like kexiformdesigner's version
- Number of currently selected tab of the Property Pane is preserved when switching back 
  to dialog for a particular part (in design mode). So if a user have looked at "data source" tab, 
	it's no longer necessary to click this tab again.

2005-06-10..16
General 
- more utility functions and clases moved to kexiutils library
Form Designer
- data aware 'text editor' widget added
- inline editor pointer is now being kept only within parent factory
- we're not creating additional (blue) resize handle set, but just changes color 
  of existing set thus resizing works well even if we're during inline editing
- inconsistences with storing pointers to currently edited widget removed 
  (m_widget, m_editor members are now private)
- we're copying common properties from an editing widget to an inline editor 
  (e.g. "margin")
- fixed resetting cursor after editing
- on creating a new spring, splitter and line widget, orientation is set according 
  its to aspect ratio; if the ratio is undefined, popup menu with vertical/horizontal/cancel 
  options is displayed
- fixed crash when pressing Tab key on form surface in design mode
- added 2 custom tabs to property pane: Data Source (mockup for now), Widgets
Property Pane
- widget class is displayed above property editor
- blinking reduced on property buffer switching

2005-06-08
KexiDB
- fixed crash for SQLite2 driver
CSV Import Dialog
- deadlock removed when importing CSV text like ","
Form Designer
- (all branches) temp. fix: QTabWidget used instead of KTabWidget ('&' bug)

2005-06-01
General
- (all branches) missing icons added
KexiDB
- (all branches) field names converted to lowercase in memory to avoid problems with comparisons

2005-05-31
Core
- editor within property panel is accepted before buffer switching
Form Designer
- record is properly fetched on subsequent switching to Data View mode, 
  especially after data source changes

2005-05-25
2005-05-27
Form Designer
- fixed crash when there're missing widgets
Query Designer
- bug for relationships creation fixed

2005-05-23
CSV Import Dialog
- "Start at line" parameter in now better updated

2005-05-13, 14
Form Designer
- "vAlign" property is now invisible for lineedit widgets (it's noop there)
- "(autonumber)" label is (identical to the one in tableview) is displayed 
  in lineedit and label widgets assigned to autonumbered fields
- shadow in label widgets is properly set for altered indenting, margins and alignment
- double focusing of text field fixed
- "format_font" action added; it's now possible setting font for one or multiple widget's 
  standard using font dialog
Core
- fixed possible crash when an object has beed saved with a different name than proposed
TODO:
- in "kexi" mode, "font" property is not visible e.g. for top-level form widget,
  and other widgets that doesn't display text
- fix data src updating in the data view when it has been changed in design view
CSV Import Dialog
- support for setting primary key (including autodetection)
- support for 'first row contains column names' flag (including autodetection)
- column types are autodetected
- import is performed within a single transaction
- characted encoding fixes; different encoding can be selected
- delimiting character is autodetected
- clipboard support re-added
- floating-point values are properly parsed
- empty cells are supported
- new table name is based on provided filename
Main Window
- 'close all' works well if there are more than one yes/no/cancel dialogs required to show

~~~~~~~~~~~~~~~~ 0.9 ~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~ 0.8 (excluding updated i18n; with KOffice 1.4) ~~~~~~~~~~~~~~~~

2005-05-10
Project Migration
- MS Access filename filter added for convenience (it's autoselected when needed)
- SQLite3 type is selected as default for destination engine type (for convenience)

2005-05-09
Forms
- fixed crash because main window didn't notice property buffer change
  form's property buffer is shared (ObjPropertyBuffer instance) 
- setting and clearing 'formName' property value for subform fixed
- fixed problems with data in subforms: data provider only sets data 
  for own items, not inside subforms (data-awarness is disabled in subforms for now)

2005-05-06
Core, Property Editor, Form Designer
- powerfull "property options" added to kexi properties: 
  can change behaviour of property editor's items
- properties: for integer types it's now possible to set "min", "max", and "minValueText"
   options; "minValueText", if available, is properly displayed: 
   e.g. see:"indent" property of Kexi's label widget
Form Designer
- shadow doesn't blink; properly refreshed on 'indent' property change
KexiDB
- inserting rows with autoinc values > than 0x7fffffff supported

2005-05-05
Form Designer
- basic data type validating added to lineedit widget
- spring drawing improved

TODO: fix KIntValidator::validate()?

2005-05-04
Form Designer
- row deleting and inserting implemented
- when started new row editing, 'next' btn is enabled (code shared with table view)
- "+ button" code shared with table view

2005-05-02
KexiDB
- we're handling application/x-sqlite2 and application/x-sqlite3
(those mime types are defined within kexi but we'll also add them for another KDE
release)

2005-04-30
KexiDB
- magic data is now defined for application/x-sqliteX, not for
  application/x-kexiproject-sqliteX (X == 2 or 3)
- file-based drivers can now define a list of supported mimetypes, not just
  one mime type (added all known mimetypes thee, including Knoda's mimes, for
  compatibility)

2005-04-29
Form Designer
- fixed many crashes appearing when a widget name was changed
- setting duplicated or invalid widget name is now impossible

2005-04-28
Form Designer
- all known property and enum names are translated; names are simplified
- more properties turned to advanced set and thus made invisible in Kexi
- kexiproperty object is created only once for on propbuffer creation 
  for every QWidget's property. This fixes problems like 
  'toggleButton' property being added twice to propeditor
- looking for i18n'd property description or enum value description: 
  on failure, we're also asking parent widget factory for this, if one exists

~~~~~~~~~~~~~~~~ 0.8 beta 1 (with KOffice 1.4) ~~~~~~~~~~~~~~~~

2005-04-27
Form Designer
- KexiGradientWidget ifdef'd out for 0.1 release 
  (using KEXI_USE_GRADIENT_WIDGET macro) due to problems with performance 
  and child widget's palettes
- added possibility of forcing particular class to be hidden 
  (eg. because it's not ready to use yet or makes no sense in current context)
- fixed creating KexiProperties for enum values
- property buffer: sometimes enums are remembered as casted to ints, 
  sometimes as string representations...
- a few properties are now hidded due to inmaturity or senseless

2005-04-25
Main Window
- fixed possible crash of the property editor on detached window closing
KexiDB/SQL Parser
- SQL Parser now accepts unicode characters for identifiers and strings
Project Migration
- drop existing database before if user configmed overwriting
- close connection on failures
- fixes for mdb driver


2005-04-22..23
Table View
- Ctrl+Delete (delete row) shortcut also works inside cell's lineedit editor 
  (default shortcut is overriden)
Table Designer
- on switching to design mode, row buffers are initialized after old buffers 
  are cleared, not before (this fixes bug with disappearing propery buffer)
Form Designer
- fix for setting background (gradient widget cleared background color value)

2005-04-21
Main Window
- 'edit > select all' global shared action added
Core
- Active window can be found even if it's detached (as in KMDI).
  This fixes shared actions availability for detached windows.
Form Designer, Report Designer
- KexiFormManager reused for reporting
- we can now assign any kexi action to a button, not only shared one..

2005-04-20
Form Designer
- we're not plugging to data-related actions for design view mode

2005-04-19
Project Wizard
- 'finish' button disabled on 'select project type' page
Form Designer
- 'delete' key removes selected widget(s); except for top level form widget
- 'menu' key works
- avoid redundancy in action-creation code
- better context menu
- actions can interoperate with shared actions
TableView
- 'menu' key code taken from global settings
Main Window
- on startup propeditor is hidden if no project is opened
Startup
- Connection Selector: added information how to create connections

2005-04-18
Core
- KexiProperty::setValue(): QCString type is now compatible with QString type
Form Designer
- assigning predefined Kexi actions to buttons
- WidgetLibrary::setAdvancedPropertiesVisible() added, so advanced properties 
  can be hidden in Kexi.
- WidgetLibrary::isPropertyVisible() improved
- 'edit pixmap collection' and 'edit connections' 
  disabled for current version of Kexi Forms
- using QString changed to QCString in maaany places

2005-04-15..16
Main
- Navigator: double clicking on item which has no data view mode available,
  opens it in design mode; Unavailable actions for given object types 
  are hidden in popup menu.
- main window: navigator's layout management fixes, again...
Form Designer
- initial version of 'assigning actions to push buttons'
- resizing main form widget is undoable and considered in setting dirty flag
- initial size of form surface fixed
- various fixes for form surface resizing and "Outer Area" text
Core
- Dialogs: new objects are not dirty by default but this is changed for forms

2005-04-13
Form Designer
- On loading, top level form widgets with negative X or Y are moved to 0 
  to avoid weird behaviour.

2005-04-12
KexiDB
- Scale property added for floating-point field types. 
  Now types like NUMERIC(precision,scale) are possible to declare.
Core
- String "Design of object \"%1\" has been modified." made well translatable 
  at plugins level.

2005-04-11
Form Designer
- it's now possible to inherit features of a widget class from a different factory

2005-04-07
Query Designer
- properies for rows were not cleared on switching back to design view 
  when statement changed


2005-04-01..04
* Many improvements added for Kexi Forms, 
  including editable query results. *
KexiDB
- BIC CHANGE:
-- FieldList: field(const QString&) added
-- QuerySchema: field(const QString&) added; 
   insertField() and fieldsExpanded() improved;  
- documentation improved
Forms
- setting (predefined) queries as form's dataSource works
- editing data for _editable_ queries works (but not rows adding or removing)
- setting "tablename.fieldname" for data-aware widget's dataSource works
- setting "queryname.fieldname" for data-aware widget's dataSource works
- when a table is set as form's data source, all primary key's fields 
  are always fetched (so editing works well with autonumbers)
- autoSync set to false for dataSource properties (using KexiDataAwareWidgetInfo)
- improved support for invalid dataSource property
- data-aware widgets with invalid dataSource property are now removed from tab-focus cycle
  (setInvalidState() now implies setting ClickFocus flag)
- on form opening: first data-aware widget with TabFocus is focused (if available)
- void KexiFormDataProvider::fillDuplicatedDataItems() works well 
  also if there are data sources like "tablename.fieldname"
Forms Library
- autoSync flag can be overriden independently within every widget factory 
  for every single class, using WidgetInfo::setAutoSyncForProperty()
- when deselecting a widget with autoSync set to false property value is now set properly
Main
- KexiBrowser: pressing Enter key to accept item renaming won't execute "open" action


2005-03-30
Forms
- setting form's background color property fixed
KexiDB
- BIC CHANGE: a few dtors made virtual
- Connection: data inserting/updating/deleting:
-- more error messages and codes added
-- we're checking if master table's primary key is available
- QuerySchema: pkeyFieldsOrder() improved, pkeyFieldsCount() added.
- FieldList::indexOf() added

2005-03-29
Main Window
- dock windows' width is managed for TabPageMode in the same way as for ChildframeMode
- hiding property editor's dock when not needed
Table/Form Views
- database cursor deleted when not needed
Forms
- writing data changes implemented

2005-03-25
Forms
- "cancel cell editing" and "cancel row editing" implemented

2005-03-10..24
Forms, TableViews
- APIs for Forms and TableViews more integrated: 
-- KexiTableEdit now inherits KexiDataItemInterface
-- KexiDataItemInterface is now used in KexiDataAwareObjectInterface, 
   not KexiTableEdit
-- KexiFormScrollView and KexiDBForm now uses KexiDataAwareObjectInterface API
   for dealing with r/w data
- data-aware widgets with duplicated data source are updated concurently 
  on editing one of them
- within forms, "column" term is now related not to column within data model,
  but to order of data-aware widget. This "column" value is translated to
  column number within data model when needed. This allows to duplicate data 
  widgets, hide them, change their ordering, etc. For example, tab order 
  (and visual order) of data-aware widgets is independant of column ordering 
  within data model.
KexiDB
- BIC CHANGE: QuerySchema::parentTable() renamed to masterTable()
- QuerySchema::masterTable() now tries to return a table 
  if there's only one defined
- Connection::createTable() - on error, existing table schema object 
  is not destroyed (i.e. it is still available e.g. 
  using within Connection::tableSchema(const QString& ), 
  even if the table was physically dropped. 
  This fixes crash for "alter table dialog" when recreating table failed
  (the dialog expects that old table schema won't be destroyed).
- Connection::resultExists() avoid appending optimizing "LIMIT 1" suffix when
  the query statement is not "SELECT".
- Connection::createTableStatement(): length parameter is now only used 
  for text and not long text field types.
Alter Table Dialog
- changing subType to LongText hides "length" property;
  changing subType to Text shows "length" property. 

2005-03-04
KexiDataAwareObjectInterface (TableView)
- fixed setting cursor position (and iterator) when changing selected 
  row after row editing

2005-03-03
- doc/dev/compile_time_options.txt document added
KexiDB
- API CHANGED - version 1.5
- KexiMessageHandler moved to KexiDB::MessageHandler, KexiDB::Title added 
  as public available, KexiDB::Object now uses MessageHandler.
KexiProject
- KexiProject now uses recent KexiDB additions
Migration (Import Project Wizard)
- fixed accepting entered target db filename
- user is asked for confirming overwrites
Main
- KEXI_CUSTOM_HARDCODED_CONNDATA temp. compile-time option added,
   see doc/dev/compile_time_options.txt
KexiStartupFileDialog
- Esc key is filtered-out so it's not hidden and 
  dialogs using this widget can bahave properly

2005-02-27
KexiDB
- mysql/sqlite drivers: fixed problem with xxxxConnection::value(int)
  when we're using raw sql statements (so expanded field list is empty)
- MySQL Driver: a hack to enable local connections without using 
  a local socket file: if user doesn't want to use local socket file,
  host name is automatically set (internally) to "127.0.0.1" 
  before connecting. This is especially usable when we're using SSH tunneling.

2005-02-26
Widgets
- KexiTableRM moved to KexiRecordMarker in libguiutils
Forms
- "pen" icon is displayed on editing within a standard form, see:
 www.kexi-project.org/wiki/wikiview/index.php?Forms%20embedded%20inside%20Kexi#3.5._
- fixed Tab/BackTab ordering when there're widgets without TabFocus focus policy set
- TabOrder dialog: "dirty" flag is always set to the curent form when the dialog is accepted
KexiDB
- Connection::dropTable(): be sure that we handle the correct TableSchema object
- Connection::storeObjectSchemaData() if we already have stored a schema data 
  with the same name and type - just update it's properties as it would be existing object

KexiRecordMarker
2005-02-23..25
Forms
- fixed Tab/BackTab ordering within form's fields, including cycles 
  and problems after detaching/attaching windows for Child Frame Mode.
  QApplication::sendEvent() used instead setFocus() for more realistic 
  (especially for QLineEdits) focusing effects when tabulator is pressed.
- QLabel and KexiPixmapLabel available again in KFD
Main
- useful Statusbar debug info about focused widget added 
  (enable this using KEXI_STATUSBAR_DEBUG compile-time macro)

2005-02-21
Kexi Startup
- "useLocalSocketFile" option for .kexis file implemented
Forms
- "autoTabStops" property added. 
   It is synced with changed made by TabStopDialog's checkbox.

2005-02-11...2005-02-20
Kexi Startup
- Support for ".kexis" shortcut files added. You can now easily create 
  a shortcut file once, and connect to your remote database server with 
  just one click :)
- "-type" command line option added 
  (specifies a type of a file provided as argument)
- opened file types are additionally checked by name extension 
  (if mimetype was not detected) -- this is useful for shortcut files
- KexiDBShortcutFile class added
- database/connection dialog reimplemented
- KexiDBDriverComboBox added: a combo box for selecting a database driver

2005-02-17
Forms
- Avoid errors and handle invalid dataSource property values within forms
- show errors as "#NAME?" in line edits and other data-aware widgets

2005-02-04
KexiDB
- DateTime values: back to ISO 8601 datetime format: 
 http://www.w3.org/TR/NOTE-datetime
 (ie. "1994-11-05T13:15:30" not "1994-11-05 13:15:30")
 --backward compatible

2005-02-02
Tables/Forms
- navigating within rows optimized by using iterators
Forms
- navigating readded (still read-only)


2005-01-29..31
Forms
- KexiGradientWidget introduced: 
  new special effects within form surface;
  Shadow Labels introduced
  (by Christian Nitschkowski; segfault_ii at web.de)
- "show ui xml code" debug function added to forms
- 1st attempt to port Forms to updated data-awarness API

2005-01-27..29
Widgets
- fixed several blind slot-signal connections
Forms
- fixed slots/signals signatures with namespaces
- better resizing new forms contents

2005-01-26
Widgets
- fixed focusing-out record navigator's line edit

2005-01-20
Core
- On failed plugins loading, proper error message is associated with KexiPart::Info 
	and available later; instead of only assigning it globally to KexiPart::Manager.

2005-01-17
SQL Editor
- focus is correctly to editor widget
API, Utils
- KexiDataAwareView, KexiDataAwareObjectInterface introduced
- API and GUI Consistency highly improved:
  KexiTableView and subclasses use the same api 
  as KexiFormView and all friends

2005-01-14
General
- KEXI_REPORTS_SUPPORT compile-time define added
Core
- new Part Item added after saving to KexiProject object's structure
  and removed from temporary list of unsaved items.

2005-01-10
Forms
- KexiDataItemChangesListener added to allow signaling changes 
  from widgets implementing KexiDataItemInterface 

2005-01-08
KexiDB
- TableSchema: table names should be lower case to ease comparisons
- we're using "lower(o_name)='givenobjname'" comparison in kexi__objects table
  to avoid problems even if somebody hacked this table with upper case letters;
  thanks to Martin Ellis for mentioning the problem
Kexi Data-aware Widgets
- KexiRecordNavigatorHandler interface introduced -handles requests 
  generated by KexiRecordNavigator
Forms
- Database-aware forms finally introduced
Core
- KexiDataItemInterface: An interface for declaring 
  widgets to be data-aware

2005-01-06
MainWindow
- maximized child window (dialog) state is preserved
  (a fix after recent KMDI behaviour changed)

2005-01-04
PropertyEditor
- prevent scrolling to previously selected item on mouse click

2004-12-22
Reports
- data view mode: record navigator is now "page navigator"
  (it has also [+] button hidden)

2004-12-21
Core
- KexiProperty - added 'fixed' flag for 'list' types
 (the flag is used in Property Editor in most cases)
- KexiPart::ObjectTypes introduced
- KexiProperty: 
  property is unchanged if we're moving from null value to a null pixmap, etc.
Form Designer
- some fixes for efficiency
- WidgetFactory can now define custom i18n'd:
  -property descriptions
  -property value descriptions

2004-12-20
SQLite Drivers (2 and 3)
*DATABSE FORMAT CHANGED to 1.4* 
- date-time data type is now stored as "YYYY-MM-DD HH:MM:SS", not as
 "YYYY-MM-DDTHH:MM:SS". This is compatible with SQLite format
 http://www.sqlite.org/cvstrac/wiki?p=DateAndTimeFunctions
 The change is backward compatible.
 (thanks for reporting: Richard Groult)
KexiDB
- Connection: queryStringList() convenience function added
- information about "possible problems" is displayed in details sections
  of error message on failed loading db driver
Migration
- wizard fixed a bit
- kexi__* tables are not copied on high-level
- MySQL Migration driver, contributed by Martin Ellis <m.a.ellis@ncl.ac.uk> 
KexiDB Drivers
- MySQL driver better splitted to internal and public part, 
  so migration driver can easier use it


2004-12-18
Forms
- WidgetLibrary: check for duplicated factories added
- factory groups introduced
- factories loading splitted for lookup/loading stages
- added 'override' flag for alternate widget class names
- minor optimizations
Form Plugin
- fixed showing form's property right after form's window loading
- record navigator added in data view

2004-12-17
KPropertyEditor
- fixed editor positioning
- bool editor height fixed
- test: more property types

2004-12-14
Form Plugin
- handling form's boundaries improved
- after switching to/from form in data view mode, its contents position is preserved
- fixed form's size setting in data view mode
- two form's resize modes introduced, see 
  http://www.kexi-project.org/wiki/wikiview/index.php?Forms#Form_Resize_Modes_for_form_windows_inside_Kexi
- in data view mode, scrollview is properly resized to avoid showing 
   outer area and without scrollbars flickering
General
- version info moved to kexi_version.h; kexi_global.h is auto-included

2004-12-13
Widgets
- libkexiguiutils added (KexiDB-independent widgets)
- KexiRecordNavigator widget added (the old one was unused)
Core
- Part::openInstance(): dlg->registerDialog() moved after successful dialog opening
  to avoid focusing non-exisitng dialog and/or flickering 
  in a case of obj. loading errors

2004-12-02
KexiDB
- version field added to kexidb driver's service files

2004-11-29
Plugins
- Migration plugin added (this removed main<->migration circular dependency)
Kexi Internal Parts
- API improved

~~~~ 2004 LT ~~~~

2004-11-24
Main
- unix: fixed problem with SIGPIPE on running another Kexi process
  (stdin/err/out is closed now)

2004-11-22
I18N
- pl translation updated
Main
- disabling forms support fixed
KexiDB
- fixed setting relationships within query
Query Designer
- criteria handling fixed
- information syncing fixed a bit more

2004-11-20
KexiDB
- TableSchemaChangeListenerInterface added to signal changes 
  in tableschema set
Query Designer
- registers usage of table schema
- fixes in GUI editor
- more checks for schema changes
Main
- on table schema altering or removing, user if now asked 
  for closing windows using this table
win32 File Dialog
- make 'My Documents' folder as default
Query Designer, SQL Parser
- fixed invalid parsing string constants

2004-11-19
Query Designer
- clearing "PK" flag is not needed in few cases
- it's now possible to enter "alias_name: simple_expression" 
   in the column #1 
Table View
- fixed repainting visible rows below a deleted row 
  (required if no confirmation box is displayed)
- record navigator's rec # indicator field:
-- fixed value validation on number entering
-- fixed focus out
- added support for editable comboboxes
Main
- always ask for removing objects
Property Editor
- do not steal Key_Home and Key_End key presses from editor item
- Key_Tab and Key_BackTab work like down/up keys

2004-11-17
Startup dialogs
- win32: fixed problem with changing directory for a new db file
Kexi Utils
- string2Identifier() : non-latin1 characters converted to latin1
  eg. 'oacute' to 'o'

2004-11-16
Relations Widget
- fixed updating tables combo box on table adding
- on new table creation, combo box is updated with a new item
Main Window
- fixed setting non-latin1 characters (e.g. db name) for the title

2004-11-15
Main Window
- close_project action's shortcut removed 
  (to avoid conflict with KMDI's 'close current child window')
- CTRL+F4 key closes child window on win32
Table View
- KexiComboBoxPopup: selection is changed on mouse release event, 
  not on press, to avoid weird effect when selection is dragged
- dropdown button placement fixed after clicking for KexiComboBoxTableEdit
- fixed race condition in GUI on fast row inserting 
  (due to QApplication::precessEvents())
- fixed vheader offset on row inserting
Query Designer
- user is warned about empty 'column' item while 'table' item is not empty
- simple criterias are loaded to GUI
KexiDB
- expression classes optimized for space and speed (NArgExpr is not used)

2004-11-13
Property Editor
- fixed moving selection (esp. using Home key) 
Query Designer
- never ending story: fixed actions availability os switching back to design more
- setting column aliases available using GUI
- "caption" property hidden for KEXI_NO_UNFINISHED
- wait cursor enabled for query executing
Kexi Browser
- CTRL+Enter shortcut handling fixed
Main Window
- property editor is shown before opening dialog (not after) 
  to allow initialize proper size inside the dialog. 
  E.g. this fixes column widths in query designer's view.
Table View
- sorting settings are cleared on setData()

2004-11-12
Kexi
- 2 icons fixed
KexiDB
- Support for Generic SQL Keywords Escaping
  contributed by Martin Ellis <m.a.ellis@ncl.ac.uk> 

2004-11-11, 12
Property Editor
- 'undo changes' button improved (icon, tooltip)
- Esc key now properly undoes changes using KexiProperty::resetValue()
- setWidget() usage fixed for spin box editors, and similar: this fixes problems with
 key press event filtering for these editors
- Home and End keys now moves to first/last row, also for nested properties
- moving selection using keyboard now ensures an item is visible
Properties
- KexiProperty::resetValue() does nothing if property is unchanged

2004-11-10
Property Editor
- on focus
--previously focused editor is activated;
--first visible item is activated if no item was active
- fixed buffer switching (focus is not set)
- focusing for combo box (list) editor fixed
- focus is set again if was set before
Table View Prop. Buffer
- fixed memory leak and possible crash
Table Designer
- switching from design view to data view: it's now posible to discard changes
- typo in prop name fixed
Main
- Key_F6/F7/F8 added for data/design/text modes

2004-11-09
Main
- fix conflict of CTRL+Tab with tabbed/ideal mode on win32
Query Designer
- 'check query' action is now avaialble under Key_F9 (was CTRL+Key_Enter) 
   to avoid conflict with editor

2004-11-08
Main
- a fix for saving main windows settings (now mdimode is saved to proper
  section)
- window_next, window_previous actions added
KexiDB
- DriverBehaviour::AUTO_INCREMENT_TYPE added

2004-11-05
Main
- fixes for actions

2004-11-04
Migration
- fixed compilation (problems due to curcular libs dependencies)
KexiDB
- alterTableName()
--works better with already started transactions
--finally works even for SQLite!
- lowlevel Connection: drv_containsTable(), drv_getTablesList() added; 
  impelemnted for all 3 drivers
- Connection::dropTable(): No error is raised if the table does not exist physically 
   -its schema is removed even in this case.
Core
- Kexi::setWaitCursor(), Kexi::removeWaitCursor() do nothing for non-GUI-aware apps.
- KexiGUIMessageHandler now calls Kexi::removeWaitCursor()
- If an object could not be opened in design/data view, 
  user is asked to let it to be opened in text mode (if available)
- KexiDialogBase: temp data handling improved
Main
- "Open in Text View" added to the Browser
Query Designer
- SQL Editor is now able to open also invalid SQL statements,
  so user can now open (and probably fix) statements.

2004-11-03
KexiSQLite 2, 3
- crashes fixed for architectures where sizeof(char*) != 4
Core
- Property, PropertyBuffer: some methods made explicity inline
- warnings added when trying to set a value to a null property 
  or when property not found. Setting value to null property disabled)
TableView
- in KexiTableView::acceptEditor():
	there might be called cancelEditor() in updateRowEditBuffer() handler,
	if this is true, d->pEditor is NULL. So we're checking
	d->pEditor and calling startEditCurrentCell() only if it's present
- Empty row is appended on row deletion when 'spreadsheet mode' is on.
- fixed setting row numbers in record navigator for empty data sets
- fixed editing large FP numbers (removed scientific mode)
SQL Parser
- added Date/DateTime/Time types support to ConstExpr 
  (parser does not operate on these constants yet)
Query Designer
- added support for Date/DateTime/Time criterias
Table Designer
- some properties are hidden for KEXI_NO_UNFINISHED
Main
- BUG: 89381 proposed fix, please test
- Browser: added override for Key_Delete (items removing)
KexiDB
- DriverBehaviour: QString AUTO_INCREMENT_PK_FIELD_OPTION and 
  bool AUTO_INCREMENT_REQUIRES_PK added. This fixes problem with 
  pgsql sequences.
- Connection:
--fixed generationg 'create table' statements.
--added drv_dropTable(), drv_alterTableName().

2004-11-02
Main
- fixes for kexi__parts
Query Designer
- fixed adding fields by entering column names by hand
- entering (simple) criteria now is working
KexiDB
- DriverBehaviour: SELECT_1_SUBQUERY_SUPPORTED added, 
  used in Connection::resultExists()
Forms
- on failed saving new form's data, all saving is rolled back
- fixed saving form data for mysql (and probably pgsql)

2004-10-29
Query Designer
- fixed focusing
Table View
- fixes for combo box

===================== Kexi 0.1 Beta 5 "Halloween" =====================

2004-10-27
Kexi
- a little speedup: QValueList::Iterator changed to QValueList::ConstIterator
TableView
- never-ending-story: fixed repaint of "insert row" for empty tables;
  fixed setting contents size based on tableSize() on table view creation
  (delayed slotUpdate() is used)
- setBottomMarginInternal() added e.g. for popups
- Appearance class introduced: defines table view's detailed appearance settings
- "row highlighting" option added, comboboxpopup uses it
- fixed doubled empty row inserting (edit_insert_empty_row action)
- ensureCellVisible() fixed when record navigator is hidden
- many improvements in combo box editor and popup
Query Designer
- "*" are better handled on schema building

2004-10-25..26
- defines moved from Makefile.global
- minor compile fixes and some warnings removed
I18N
- pl translation updated
Forms
- fixed crash in connection editor
TableView
- datatimeedit hack disabled for !win32
- "edit_clear_table" action added
- KexiTableViewDataBase made protected in KexiTableViewData for safety
- on row inserting, enable "next" button
- record navigator
-- now takes full width, painting fixed
-- update width when number of digits in rows counter changes
Main
- preferences and configureToolbars actions ifdefed using KEXI_SHOW_UNIMPLEMENTED
Plugins
- Default implementation of Part::remove() added again. 
  This is enough eg. for Form plugin.
- table and query plugin: Connection::eemoveObject() is called even 
  if object's could not be loaded, what allows to remove invalid objects.

2004-10-22
TableView
- KexiDateTimeTableEdit, KexiTimeTableEdit implemented
Table Designer
- BLOB types ifdefed using KEXI_SHOW_UNIMPLEMENTED
KexiDB
- DriverManager does not list derver-based projects 
  when KEXI_SERVER_SUPPORT is undefined
Startup
- added error message when explicity provided db driver name not found

2004-10-21
Core
- shared action's "enabler" introduced
Startup
- KexiStartupFileDialog: filename handling fixed for win32; fixed focusing
- avoid asking for conversion when '--dbdriver sqlite2' 
  or '--createdb' CL option is present
TableView
- highlighting for int and float types fixed
- fixed initializing for date picker
- added 'datetime' and 'time' types support
- adding empty rows when possible also for db-aware table views
  (ie. RowEditoBuffer can be empty on insert)
- it's now allowed to click "+" button in record navigator to insert rows 
  (current editing is accepted)
- on failed row insert/update, user is informed 
  about "data_cancel_row_changes" action availability
- on invalid value entered in a cell (after a msg box is closed),
  the cell's editor is focused again
Compile-time switches
- KEXI_STARTUP_SHOW_TEMPLATES, KEXI_STARTUP_SHOW_RECENT,
  KEXI_SERVER_SUPPORT, KEXI_FORMS_SUPPORT added (currently all enabled by default)
Main
- copy/paste/cut on navigator items enabled only for KEXI_SHOW_UNIMPLEMENTED
- toolbars redesigned: now "design" toolbar is for kexipart's design view
  and "data" is for data view. This avoids toolbars duplication.
- propeditor dock window is hidden when a window in data view mode is active 
  (or no window is present). This feature is partially disabled 
  (using PROPEDITOR_VISIBILITY_CHANGES), though,
  --REENABLE when blinking and dock width changes will be removed in KMDI
- "data_cancel_row_changes" action added
KexiDB
- FORMAT CHANGED: SQLite Driver: 'date', 'datetime' and 'time' 
  types support fixed: Qt::ISODate format is used
- FieldList: simple methods made inline; fixed bug in hasField()
- findRef() instead of find() used in few places for speedup
- a hack needed because QVariant(QTime) has broken isNull():
  Internally: null time value is now null QDateTime(), not-null time value
  is now QDateTime(QDate(0,1,2),time); This allows to store 00:00:00 times.
  See also stringToHackedQTime(const QString& s).
Table Designer
- "tablepart_toggle_pkey" action temporary removed from toolbar
  (will be re-added after shared toggle actions fix);
- "tablepart_toggle_pkey" action added to popup menu and to Edit menu


2004-10-20
Main
- "file_open" and "file_new" actions now start a new process 
	for creating/opening database, if needed.
- KEXI_SHOW_UNIMPLEMENTED macro added
KexiDB Parser
- fixed handling large integer constants 
Table Designer
- primary-key-fields: BigInteger type is enforced; subtypes are hidden
Kexi Properties
- KexiPropertyEditor::setBuffer() can be now safely called even from 
  KexiPropertyBuffer::propertyChanged() signal handlers (refreshing is delayed).
Core
- KexiViewBase::propertyBufferReloaded(): bool preservePrevSelection added

2004-10-19
Main
- "delete_row" action shortcut is now CTRL+Delete, to avoid conflict with edit_cut (Shift Delete)
- fixes for KexiBrowser
TableView
- KexiComboBoxTableEdit improved
- KexiTableViewColumn: try harder to get a column name
Startup
- --password option removed
- --create-opendb CL option added

2004-10-18
KexiDB Parser, KexiDB
- Field::Type type() introduced for expression classes
- type(): integer subtypes (Integer, BigInteger, ..) 
   are detected for int constants; the same for strings
- Field::type(): If there's expression assigned,
  type of the expression is returned instead.
- Field::Type::Null added
Query View
- Expressions are now displayed, with header names
Core
- KexiDialogBase::activate() -another focus-related fix

2004-10-16
Core
- KexiSharedActionConnector introduced
SQL Editor
- double clicking on a history item selects it for editing

2004-10-15
- small speedup for Kexi global objects on startup
- fixes for KexiStartupFileDialog 
- tests/newapi is compield by default. Other tests disabled.
Core, Plugins
- SPEEDUP OF STARTUP: 
  Part::initActions() splitted to Part::initPartActions() (default one)
  and Part::initInstanceActions() (lazy one)
Kexi
- name argument is now passed to KGenericFactory to avoid runtime warnings
KexiDB Parser, KexiDB
- Expression: 
-- former type renamed to token
-- 'type' member added; typechecks added to validate()
- more SQL statements are supported

2004-10-14
Kexi
- more debug areas added
- KexiStartupFileDialog wrapped for win32 again
TODO: move some things to kdeui/win32
KexiDB Parser, KexiDB
- WHERE expression is supported
- operators like "IS SIMILAR TO" and "IS NOT NULL" better supported
- brackets better supported
- both <> and != supported

2004-10-11
Parser:
- ER004 supported

2004-10-09
Kexi 