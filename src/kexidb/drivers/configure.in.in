dnl ========================================
dnl checks for MySQL
dnl taken form KDEDB
dnl ========================================

AC_ARG_ENABLE(mysql,
	AC_HELP_STRING([--enable-mysql],[build MySQL-plugin [default=yes]]),
              mysql_plugin=$enableval, mysql_plugin=yes)

AC_ARG_WITH(mysql_includes,
AC_HELP_STRING([--with-mysql-includes=DIR],[use MySQL-includes installed in this directory]),
[
  ac_mysql_incdir=$withval
], ac_mysql_incdir=/usr/local/include
)

AC_ARG_WITH(mysql_libraries,
AC_HELP_STRING([--with-mysql-libraries=DIR],[use MySQL-libs installed in this directory ]),
[
  ac_mysql_libdir=$withval
], ac_mysql_libdir=/usr/local/lib
)

dnl ==============================================
dnl check for MySQL should be compiled
dnl and where headers and libraries are installed
dnl if present compile mysql-plugin
dnl ==============================================

AC_MSG_CHECKING([for MySQL])

compile_mysql_plugin="yes"

if test "x$mysql_plugin" != "xyes"; then
  compile_mysql_plugin="no"
fi

KDE_FIND_PATH(mysql_config, MYSQL_CONFIG, [${prefix}/bin ${exec_prefix}/bin /usr/local/bin /opt/local/b\
in /usr/bin /opt/mysql/bin /usr/local/mysql/bin ], [
  AC_MSG_WARN([Could not find MySQL anywhere, check http://www.mysql.com/])
])

if test -n "$MYSQL_CONFIG"; then
	mysql_incdir=`$MYSQL_CONFIG --cflags| $SED -e "s,-I,,g" | cut -d " " -f 1`
	mysql_libdir=`$MYSQL_CONFIG --libs| $SED -e "s,',,g"`
	MYSQL_INC=$mysql_incdir
	MYSQL_LIBS=$mysql_libdir
	AC_SUBST(MYSQL_INC)
	AC_SUBST(MYSQL_LIBS)
else
	compile_mysql_plugin="no"
fi

if test "$compile_mysql_plugin" = "yes"; then
  AC_MSG_RESULT([libraries $mysql_libdir, headers $mysql_incdir])
else
  AC_MSG_RESULT(not found)
fi

AM_CONDITIONAL(compile_mysql_plugin, test "$compile_mysql_plugin" = "yes")



dnl ========================================
dnl Checks for PostgreSQL
dnl ========================================

dnl ========================================
dnl libpq
dnl   Add configure-args
dnl ========================================

dnl Assume we're building until something fails, unless explicitly disabled
AC_ARG_ENABLE(pgsql,
AC_HELP_STRING([--enable-pgsql],[build PostgreSQL-plugin [default=yes]]),
 pgsql_plugin=$enableval, pgsql_plugin=yes)

if test "x$pgsql_plugin" = "xyes"; then
  compile_pgsql_plugin="yes"
else
  compile_pgsql_plugin="no"
fi

AC_ARG_WITH(pgsqlincdir,
AC_HELP_STRING([--with-pgsqlincdir=DIR],[use PostgreSQL(libpq)-includes installed in this directory ]),
[
  ac_pgsql_incdir=$withval
], ac_pgsql_incdir=
)

AC_ARG_WITH(pgsqllibdir,
AC_HELP_STRING([  --with-pgsqllibdir=DIR],[use PostgreSQL(libpq)-libraries installed in this directory ]),
[
  ac_pgsql_libdir=$withval
], ac_pgsql_libdir=
)


dnl ========================================
dnl   header/library directories
dnl ========================================

if test "$compile_pgsql_plugin" = "yes" -a \
        ! -n "$ac_pgsql_incdir" -a ! -n "$ac_pgsql_libdir"; then
dnl *** No configure arguments for includes or libs given ***
dnl *** and not explicitly disabled.                      ***
  KDE_FIND_PATH(pg_config, PG_CONFIG, 
    [${prefix}/bin ${exec_prefix}/bin /usr/local/bin \
     /opt/local/bin /usr/bin ], [
    AC_MSG_RESULT([not found])
  ])

  if test -n "$PG_CONFIG"; then
    pg_incdir=`$PG_CONFIG --includedir`
    pg_libdir=`$PG_CONFIG --libdir`
    PG_INCDIR=$pg_incdir
    PG_LIBDIR=$pg_libdir
    AC_SUBST(PG_LIBDIR)
    compile_pgsql_plugin="yes"
  else
    compile_pgsql_plugin="no"
  fi
elif test "$compile_pgsql_plugin" = "yes"; then
dnl *** Configure arguments for includes or libs given    ***
dnl *** and not explicitly disabled.                      ***
dnl *** Check that the paths given to configure are valid ***
  AC_MSG_CHECKING([for PostgreSQL C API headers])
  if test -r $ac_pgsql_incdir/libpq-fe.h; then
    PG_INCDIR=$ac_pgsql_incdir
    AC_MSG_RESULT([$PG_INCDIR])
    AC_SUBST(PG_INCDIR)
  else
    AC_MSG_RESULT([not found])
    compile_pgsql_plugin="no"
  fi

  AC_MSG_CHECKING([for PostgreSQL C API libraries])
  if test -r $ac_pgsql_libdir/libpq.so; then
    PG_LIBDIR=$ac_pgsql_libdir
    AC_MSG_RESULT([$PG_LIBDIR])
    AC_SUBST(PG_LIBDIR)
  else
    compile_pgsql_plugin="no"
    AC_MSG_RESULT([not found])
  fi
else
dnl *** PostgreSQL plugin explicitly disabled.            ***
dnl *** Show that we are doing as requested.              ***
  AC_MSG_NOTICE([Not attempting to configure PostgreSQL as requested])
fi

AM_CONDITIONAL(compile_pgsql_plugin, test "$compile_pgsql_plugin" = "yes")


dnl ========================================
dnl libpqxx checks
dnl ========================================

AC_ARG_WITH(pqxxincdir,
AC_HELP_STRING([--with-pqxxincdir=DIR],[use PostgreSQL(libpqxx)-includes installed in this directory ]),
[
  ac_pqxx_incdir=$withval
], ac_pqxx_incdir=/usr/local/pqxx/include/pqxx
)

AC_ARG_WITH(pqxxlibdir,
AC_HELP_STRING([--with-pqxxlibdir=DIR],[use PostgreSQL(libpqxx)-libraries installed in this directory ]),
[
  ac_pqxx_libdir=$withval
], ac_pqxx_libdir=/usr/local/lib
)


dnl ========================================
dnl   libpqxx headers
dnl ========================================
if test "$compile_pgsql_plugin" = "yes"; then
  AC_MSG_CHECKING([for PostgreSQL C++ includes])
  pqxx_incdirs="$ac_pqxx_incdir /usr/include /usr/local/pqxx/include /usr/local/include"
  AC_FIND_FILE(pqxx/pqxx, $pqxx_incdirs, pqxx_incdir)
  if test ! -r $pqxx_incdir/pqxx/pqxx; then
    compile_pgsql_plugin="no"
    AC_MSG_RESULT([not found])
  else
    PQXX_INCDIR=$pqxx_incdir
    AC_MSG_RESULT([$PQXX_INCDIR])
    AC_SUBST(PQXX_INCDIR)
  fi
fi

dnl ========================================
dnl   libpqxx libraries
dnl ========================================
if test "$compile_pgsql_plugin" = "yes"; then
  AC_MSG_CHECKING([for PostgreSQL C++ libraries])
  pqxx_libdirs="$ac_pqxx_libdir /usr/lib /usr/local/lib /usr/local/pqxx/lib"
  AC_FIND_FILE(libpqxx.so, $pqxx_libdirs, pqxx_libdir)
  if test ! -r $pqxx_libdir/libpqxx.so; then
    compile_pgsql_plugin="no"
    AC_MSG_RESULT([not found])
  else
    PQXX_LIBDIR=$pqxx_libdir
    AC_MSG_RESULT([$PQXX_LIBDIR])
    AC_SUBST(PQXX_LIBDIR)
  fi
fi

AM_CONDITIONAL(compile_pgsql_plugin, test "$compile_pgsql_plugin" = "yes")
