/* This file is part of the KDE project
   Copyright (C) 2003 Jaroslaw Staniek <js@iidea.pl>

   This library is free software; you can redistribute it and/or
   modify it under the terms of the GNU Library General Public
   License as published by the Free Software Foundation; either
   version 2 of the License, or (at your option) any later version.

   This library is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
   Library General Public License for more details.

   You should have received a copy of the GNU Library General Public License
   along with this library; see the file COPYING.LIB.  If not, write to
   the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
   Boston, MA 02111-1307, USA.
*/

#ifndef KEXIDB_INDEX_H
#define KEXIDB_INDEX_H

#include <qvaluelist.h>
#include <qstring.h>

#include <kexidb/fieldlist.h>

namespace KexiDB {

class Connection;
class TableSchema;
class QuerySchema;

/*! 
*/

class KEXI_DB_EXPORT IndexSchema : public FieldList
{
	public:
		typedef QPtrList<IndexSchema> List;

		IndexSchema();
		~IndexSchema();
//		unsigned int fieldCount() const;
//		KexiDB::Field field(unsigned int id) const;
//		QStringList primaryKeys() const;
//		bool hasPrimaryKeys() const;
//		void addField(Field field);
//		virtual void addField(Field field);

		const QString& name() const;
		void setName(const QString& name);
		KexiDB::TableSchema* table();

		/*! \return true if index is auto-generated.
			Auto-generated index is one-filed index
			that was generated 
			for CREATE TABLE statement when the field has UNIQUE 
			constraint enabled.
		*/
		bool isAutoGenerated();

		/*! \return true if this is index is primary key. 
			This can be one or multifield. */
		bool isPrimary();

//		int id() { return m_id; }
//		Field::List::iterator fields() { return m_fields.begin(); }
//js		void addPrimaryKey(const QString& key);

//		void debug();
	protected:
		/*! Sets primary flag. \sa isPrimary(). */
		void setPrimary(bool set);
		/*! Sets auto-generated flag. \sa isAutoGenerated(). */
		void setAutoGenerated(bool set);

		/*! Automatically retrieves index schema via connection. */
		IndexSchema(const QString & name, Connection *conn);

	//js	QStringList m_primaryKeys;
		Connection *m_conn;
		
		QString m_name;
		bool m_primary : 1;
		bool m_isAutoGenerated : 1;
//		int m_id; //! unique identifier used in kexi__tables for this table


	friend class Connection;
	friend class TableSchema;
	friend class QuerySchema;
};

} //namespace KexiDB

#endif
